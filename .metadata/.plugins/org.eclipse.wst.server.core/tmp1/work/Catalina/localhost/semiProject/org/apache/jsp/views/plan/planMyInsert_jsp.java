/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-09-17 16:39:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.plan;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import semiProject.com.kh.planMy.model.vo.PlanMy;
import semiProject.com.kh.place.model.vo.Place;
import semiProject.com.kh.member.model.vo.Member;
import semiProject.com.kh.area.model.vo.Area;

public final class planMyInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("semiProject.com.kh.member.model.vo.Member");
    _jspx_imports_classes.add("semiProject.com.kh.area.model.vo.Area");
    _jspx_imports_classes.add("semiProject.com.kh.place.model.vo.Place");
    _jspx_imports_classes.add("semiProject.com.kh.planMy.model.vo.PlanMy");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	String contextPath = request.getContextPath();
	ArrayList<Place> list = (ArrayList<Place>)request.getAttribute("list");  
	Member loginUser = (Member)session.getAttribute("loginUser");
	ArrayList<Area> aList = (ArrayList<Area>)request.getAttribute("aList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"description\" content=\"Directing Template\">\r\n");
      out.write("    <meta name=\"keywords\" content=\"Directing, unica, creative, html\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("    <title>내 맘대로 일정 계획</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Google Font -->\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700;800&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Css Styles -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/bootstrap.min.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/font-awesome.min.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/elegant-icons.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/flaticon.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/nice-select.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/barfiller.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/magnific-popup.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/jquery-ui.min.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/owl.carousel.min.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/slicknav.min.css\" type=\"text/css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/resources/css/style.css\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 제이쿼리 피커데이트 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("    <script src=\"//code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"//code.jquery.com/ui/1.11.4/jquery-ui.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<!-- 폰트 3 -->\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Gowun+Batang:wght@700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("    	h1, h2, h3, h4, h5, h6, p, a, input, button, li, div{\r\n");
      out.write("	        font-family: 'Gowun Batang'!important;\r\n");
      out.write("	    }\r\n");
      out.write("    	.filter {\r\n");
      out.write("			position: fixed;\r\n");
      out.write("			left: 0;\r\n");
      out.write("			top: 0;\r\n");
      out.write("			width: 480px;\r\n");
      out.write("			height: 100%;\r\n");
      out.write("			background: #ffffff;\r\n");
      out.write("			padding: 30px 34px 30px 30px;\r\n");
      out.write("			overflow-y: scroll;\r\n");
      out.write("			-webkit-box-shadow: 0px 5px 14px rgba(0, 0, 0, 0.1);\r\n");
      out.write("			box-shadow: 0px 5px 14px rgba(0, 0, 0, 0.1);\r\n");
      out.write("			z-index: 99;\r\n");
      out.write("			padding-top: 140px;\r\n");
      out.write("		}.my-scroll {\r\n");
      out.write("			height: 100%;\r\n");
      out.write("			overflow-y: auto;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.listing {\r\n");
      out.write("			overflow-y: auto;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.ov-hid {\r\n");
      out.write("			overflow: hidden;\r\n");
      out.write("			padding-left: 480px;\r\n");
      out.write("		}\r\n");
      out.write("        .header__logo_myplan{\r\n");
      out.write("            padding: 15px 0px;\r\n");
      out.write("        }\r\n");
      out.write("        .planInput{\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            resize: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .date_2{\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        #dateBtn{\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .listArea{\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border:1px solid lightgray;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        .searchArea{\r\n");
      out.write("            margin-top:50px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .listArea>tbody>tr:hover{\r\n");
      out.write("            background:darkgrey;\r\n");
      out.write("            cursor:pointer\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /*카드 형식 안쓸때*/\r\n");
      out.write("        .thumbnail{  \r\n");
      out.write("            display:inline-block;  /*가로너비에 맞게 나란히 일정한 간격으로 보이게*/\r\n");
      out.write("            float:left;\r\n");
      out.write("            width:100%;\r\n");
      out.write("            border:1px solid white;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .planBox{\r\n");
      out.write("        	/* width: 350px; */\r\n");
      out.write("        	/* width: 100%; */\r\n");
      out.write("		    border: solid 1px #dfdfdf;\r\n");
      out.write("		    /* height: 100px; */\r\n");
      out.write("		    padding: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .planTitle{\r\n");
      out.write("        	line-height: 30px;\r\n");
      out.write("		    font-size: 21px;\r\n");
      out.write("		    color: black;\r\n");
      out.write("		    font-size: 25px;\r\n");
      out.write("    		color: black;\r\n");
      out.write("        }\r\n");
      out.write("        .header{\r\n");
      out.write("        	background-color:#FAE6B9;\r\n");
      out.write("        }\r\n");
      out.write("        .filter__title{\r\n");
      out.write("        	margin-bottom:10px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        <!--카카오지도-->\r\n");
      out.write("        .map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;}\r\n");
      out.write("		.map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;}\r\n");
      out.write("		.map_wrap {position:relative;width:100%;height:92%;}\r\n");
      out.write("		#menu_wrap {position:absolute;top:0;left:0;bottom:0;width:250px;height:550px;margin:10px 0 30px 10px;padding:5px;overflow-y:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;}\r\n");
      out.write("		.bg_white {background:#fff;}\r\n");
      out.write("		#menu_wrap hr {display: block; height: 1px;border: 0; border-top: 2px solid #5F5F5F;margin:3px 0;}\r\n");
      out.write("		#menu_wrap .option{text-align: center;}\r\n");
      out.write("		#menu_wrap .option p {margin:10px 0;}  \r\n");
      out.write("		#menu_wrap .option button {margin-left:5px;}\r\n");
      out.write("		#placesList li {list-style: none;}\r\n");
      out.write("		#placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;}\r\n");
      out.write("		#placesList .item span {display: block;margin-top:4px;}\r\n");
      out.write("		#placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}\r\n");
      out.write("		#placesList .item .info{padding:10px 0 10px 55px;}\r\n");
      out.write("		#placesList .info .gray {color:#8a8a8a;}\r\n");
      out.write("		#placesList .info .jibun {padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;}\r\n");
      out.write("		#placesList .info .tel {color:#009900;}\r\n");
      out.write("		#placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;}\r\n");
      out.write("		#placesList .item .marker_1 {background-position: 0 -10px;}\r\n");
      out.write("		#placesList .item .marker_2 {background-position: 0 -56px;}\r\n");
      out.write("		#placesList .item .marker_3 {background-position: 0 -102px}\r\n");
      out.write("		#placesList .item .marker_4 {background-position: 0 -148px;}\r\n");
      out.write("		#placesList .item .marker_5 {background-position: 0 -194px;}\r\n");
      out.write("		#placesList .item .marker_6 {background-position: 0 -240px;}\r\n");
      out.write("		#placesList .item .marker_7 {background-position: 0 -286px;}\r\n");
      out.write("		#placesList .item .marker_8 {background-position: 0 -332px;}\r\n");
      out.write("		#placesList .item .marker_9 {background-position: 0 -378px;}\r\n");
      out.write("		#placesList .item .marker_10 {background-position: 0 -423px;}\r\n");
      out.write("		#placesList .item .marker_11 {background-position: 0 -470px;}\r\n");
      out.write("		#placesList .item .marker_12 {background-position: 0 -516px;}\r\n");
      out.write("		#placesList .item .marker_13 {background-position: 0 -562px;}\r\n");
      out.write("		#placesList .item .marker_14 {background-position: 0 -608px;}\r\n");
      out.write("		#placesList .item .marker_15 {background-position: 0 -654px;}\r\n");
      out.write("		#pagination {margin:10px auto;text-align: center;}\r\n");
      out.write("		#pagination a {display:inline-block;margin-right:10px;}\r\n");
      out.write("		#pagination .on {font-weight: bold; cursor: default;color:#777;}       \r\n");
      out.write("		\r\n");
      out.write("		table{\r\n");
      out.write("        	border-collapse:collapse;\r\n");
      out.write("        }\r\n");
      out.write("        th,td{\r\n");
      out.write("        	border-bottom: 1px solid lightgrey;\r\n");
      out.write("        	padding:3px;\r\n");
      out.write("        }\r\n");
      out.write("        th{\r\n");
      out.write("        	background-color:#FDF5E6;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"ov-hid\">\r\n");
      out.write("   <!-- Header Section Begin -->\r\n");
      out.write("    <header class=\"header header--normal\" style=\"background-color: #FAE6B9;\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-lg-3 col-md-3\">\r\n");
      out.write("                    <div class=\"header__logo_myplan\">\r\n");
      out.write("                        <a href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/Logo_D_1.png\" alt=\"야호\"></a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-lg-9 col-md-9\">\r\n");
      out.write("                    <div class=\"header__nav\">\r\n");
      out.write("                        <nav class=\"header__menu mobile-menu\">\r\n");
      out.write("                            <ul>\r\n");
      out.write("                                <li><a href=\"");
      out.print(contextPath );
      out.write("/views/plan/planSelect.jsp\">일정플래너</a>\r\n");
      out.write("                \r\n");
      out.write("                                    <ul class=\"dropdown\">\r\n");
      out.write("                                        <li><a href=\"#\" class=\"movePage\">마음대로일정</a></li>\r\n");
      out.write("                                        <li><a href=\"");
      out.print(contextPath );
      out.write("/views/plan/adminRecommend.jsp\">추천일정</a></li>\r\n");
      out.write("                                        <li><a href=\"#\" class=\"movePage\">일정보관함</a></li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </li>\r\n");
      out.write("                                <li><a href=\"");
      out.print(contextPath );
      out.write("/list.bo\">커뮤니티</a></li>\r\n");
      out.write("                                \r\n");
      out.write("                                ");
if(loginUser == null){
      out.write("  \r\n");
      out.write("                                <li><a href=\"");
      out.print(contextPath );
      out.write("/views/member/login.jsp\" onclick=\"goLogin();\">로그인</a></li>\r\n");
      out.write("                                <li><a href=\"");
      out.print(contextPath );
      out.write("/views/member/signUp.jsp\" onclick=\"enrollPage();\">회원가입</a></li>\r\n");
      out.write("                                 ");
}else if(loginUser.getUserId().equals("admin")) { 
      out.write("\r\n");
      out.write("                                <li><a href=\"");
      out.print(contextPath );
      out.write("/adminPage.ad\">관리자페이지</a></li>\r\n");
      out.write("                               	<li><a href=\"");
      out.print(contextPath );
      out.write("/logout.me\">로그아웃</a></li>                                \r\n");
      out.write("                                 ");
}
                                else { 
      out.write("\r\n");
      out.write("	                                <li><a href = \"");
      out.print(contextPath);
      out.write("/mypage.me\">마이페이지</a></li>\r\n");
      out.write("	                                <li><a href = \"");
      out.print(contextPath);
      out.write("/logout.me\">로그아웃</a></li>\r\n");
      out.write("							      ");
}
      out.write("\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </nav>\r\n");
      out.write("                       	<div class=\"header__menu__right\">\r\n");
      out.write("                \r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"mobile-menu-wrap\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("    <!-- Header Section End -->\r\n");
      out.write("    \r\n");
      out.write("    <!-- 로그인 2가지 경우에 따른 화면전환 -->\r\n");
      out.write("                <script>\r\n");
      out.write("                    $('.movePage').click(function(){\r\n");
      out.write("                        var text = $(this).text();\r\n");
      out.write("                        console.log(text);\r\n");
      out.write("                        ");
if(loginUser == null) {
      out.write("\r\n");
      out.write("	                         alert(\"로그인 후 이용해주세요\");\r\n");
      out.write("	                         location.href=\"");
      out.print(contextPath);
      out.write("/views/member/login.jsp\";\r\n");
      out.write("	                    ");
}else{ 
      out.write("\r\n");
      out.write("		                     if(text == \"마음대로일정\"){\r\n");
      out.write("	                           	 location.href=\"");
      out.print(contextPath);
      out.write("/list.pm\";	\r\n");
      out.write("	                         }else if(text == \"일정보관함\"){\r\n");
      out.write("	                             location.href=\"");
      out.print(contextPath);
      out.write("/list.ps\";\r\n");
      out.write("	                         }\r\n");
      out.write("		                ");
}
      out.write("\r\n");
      out.write("                    });\r\n");
      out.write("                    \r\n");
      out.write("                    $('#dateBtn').click(function(){\r\n");
      out.write("                        var value = $(\"#startDate\").val();\r\n");
      out.write("                        console.log(value);\r\n");
      out.write("                        $(\"#planDate\").text('선택하신 날짜 : ' + value);\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                </script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Filter Begin -->\r\n");
      out.write("    <div class=\"filter my-scroll\">\r\n");
      out.write("        <form action=\"create.pl\" method=\"POST\"  onsubmit=\"return checkTable();\">\r\n");
      out.write("            <div class=\"filter__title\">\r\n");
      out.write("                <h5>일정 제목</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <input type=\"text\" class=\"planInput\" name=\"planTitle\" id=\"planTitle\" maxLength=\"20\" required>\r\n");
      out.write("                <div id=\"counter\" style=\"font-size:12px; position:absolute; top:180px; left:405px;\"><b>0/20</b></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"filter__title\">\r\n");
      out.write("                <h5>일정 날짜</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <input type=\"text\" class=\"planInput\" name=\"planDate\" id=\"startDate\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"filter__title\">\r\n");
      out.write("                <h5>메모</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <textarea class=\"planInput\" name=\"planMemo\" id=\"planMemo\" cols=\"30\" rows=\"6\"></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"filter__title\">\r\n");
      out.write("                <h5>위치 선택</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <!--select 로 값 받기-->\r\n");
      out.write("                <select name=\"planArea\" class=\"planInput\" id=\"region\"  onchange=\"clickRegion(this)\" > \r\n");
      out.write("                    ");
for(Area a : aList) {
      out.write("\r\n");
      out.write("						<option value=\"");
      out.print(a.getAreaNo());
      out.write('"');
      out.write('>');
      out.print(a.getAreaName() );
      out.write("</option>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"filter__title\">\r\n");
      out.write("                <h5>추가한 장소</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <table class=\"listArea\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th width=\"50\">장소명</th>\r\n");
      out.write("                        <th width=\"200\">주소</th>\r\n");
      out.write("                        <th width=\"50\"></th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody id=\"my_tbody\"></tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"filter__btns\">\r\n");
      out.write("                <button type=\"submit\">일정 저장하기</button>\r\n");
      out.write("            </div>            \r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Filter End -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Listing Section Begin --> <!--ov.hid-->\r\n");
      out.write("    <section class=\"listing my-scroll\">\r\n");
      out.write("        <div class=\"listing__text__top\">\r\n");
      out.write("            <div class=\"listing__text__top__left\">\r\n");
      out.write("            	<img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/listing/restaurant.png\" width=\"30px\"> \r\n");
      out.write("            	<h5 class=\"chooseCategory\"><a style=\"cursor:pointer\">식당</a></h5>\r\n");
      out.write("            	<img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/listing/coffee-pot.png\" width=\"30px\"> \r\n");
      out.write("                <h5 class=\"chooseCategory\"><a style=\"cursor:pointer\">카페주점</a></h5>\r\n");
      out.write("                <img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/listing/shoes.png\" width=\"30px\"> \r\n");
      out.write("                <h5 class=\"chooseCategory\"><a style=\"cursor:pointer\">액티비티</a></h5>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div>\r\n");
      out.write("	        ");
System.out.println("list_planMy.jsp : " +list); 
      out.write("\r\n");
      out.write("	        ");
 if(list.size() == 0) {
      out.write("\r\n");
      out.write("        	<h4>해당 지역에 등록된 장소가 없습니다.</h4>\r\n");
      out.write("\r\n");
      out.write("	        <!-- 모든 place들 조회해와서 화면에 띄워주기 -->\r\n");
      out.write("	        ");
}else{ 
      out.write("\r\n");
      out.write("	        	<div class=\"row\"  id=\"placeList\">\r\n");
      out.write("			        ");
for(Place p : list) {
      out.write("\r\n");
      out.write("			        	<div class=\"col-lg-6 col-md-6\">  <!-- 가로 한 줄에 장소 2개 나오게끔 설정 -->\r\n");
      out.write("							<div class=\"thumbnail\" align=\"center\">\r\n");
      out.write("								<input type=\"hidden\" value=\"");
      out.print(p.getPlaceNo());
      out.write("\" id=\"placeNo\">\r\n");
      out.write("								<input type=\"hidden\" value=\"");
      out.print(p.getAreaNo());
      out.write("\" id=\"areaNo\" name=\"areaNo\">\r\n");
      out.write("								<input type=\"hidden\" value=\"");
      out.print(p.getCategoryNo());
      out.write("\" id=\"categoryNo\" name=\"categoryNo\">\r\n");
      out.write("								\r\n");
      out.write("		                    	<img class=\"placeImg\" src=\"");
      out.print(request.getContextPath());
      out.write("/resources/place_upFiles/");
      out.print( p.getTitleImg() );
      out.write("\" width=\"100%\" height=\"250px\"> <br>\r\n");
      out.write("		                    	<div class=\"planBox\">\r\n");
      out.write("		                    		<p class=\"placeTitle\" id=\"placeTitle\" style=\"font-size:25px; color:black;\">");
      out.print(p.getPlaceTitle());
      out.write("</p>\r\n");
      out.write("		                    		<p id=\"placeAddress\">");
      out.print(p.getAddress());
      out.write("</p>\r\n");
      out.write("									<p>");
      out.print(p.getDescription() );
      out.write("</p>\r\n");
      out.write("		                    		<button class=\"btn btn-primary addPlace\">추가</button>\r\n");
      out.write("									<button class=\"btn btn-primary placeDetail\">더보기</button>\r\n");
      out.write("		                    	</div>\r\n");
      out.write("		                    </div>\r\n");
      out.write("	                	</div>\r\n");
      out.write("					");
} 
      out.write("  \r\n");
      out.write("				</div>\r\n");
      out.write("	        ");
} 
      out.write("\r\n");
      out.write("        </div> 	\r\n");
      out.write("    	\r\n");
      out.write("    	<script>\r\n");
      out.write("    		//planTitle일정제목 글자수 제한_20글자까지 가능\r\n");
      out.write("	    	 $(\"#planTitle\").keyup(function(e){\r\n");
      out.write("	         	var content = $(this).val();\r\n");
      out.write("	         	$(\"#counter\").html(content.length+\"/20\");\r\n");
      out.write("	         	\r\n");
      out.write("	         	if(content.length>20){\r\n");
      out.write("	         		alert(\"최대 20자까지 입력 가능합니다.\");\r\n");
      out.write("	         		$(this).val(content.substring(0,20));\r\n");
      out.write("	         		$(\"#counter\").html(\"20/20\");\r\n");
      out.write("	         	}\r\n");
      out.write("	         })\r\n");
      out.write("	         \r\n");
      out.write("	         //planTitle일정제목 글자수 제한_20글자까지 가능\r\n");
      out.write("	    	 $(\"#planMemo\").keyup(function(e){\r\n");
      out.write("	         	console.log($(this).val());\r\n");
      out.write("	         	var content = $(this).val();\r\n");
      out.write("	         	\r\n");
      out.write("	         	if(content.length>200){\r\n");
      out.write("	         		alert(\"최대 200자까지 입력 가능합니다.\");\r\n");
      out.write("	         		$(this).val(content.substring(0,200));\r\n");
      out.write("	         	}\r\n");
      out.write("	         })\r\n");
      out.write("         \r\n");
      out.write("	    	//table에 추가된 장소의 조건 체크 후 submit되게 함\r\n");
      out.write("	    	function checkTable(){\r\n");
      out.write("	    		console.log(\"length : \"+$(\"#tablePlaceNo\").length)\r\n");
      out.write("	    		if($(\"#tablePlaceNo\").length==0){  			//일정이 0개인 경우\r\n");
      out.write("	    			alert(\"일정을 1개 이상 추가해주세요\")\r\n");
      out.write("	        		return false   \r\n");
      out.write("	    		}	\r\n");
      out.write("	    		if($('input[name=\"placeNo\"]').length>20){	//일정이 20개를 초과하는 경우\r\n");
      out.write("	    			alert(\"일정은 10개 이하로 추가해주세요\")\r\n");
      out.write("	        		return false   \r\n");
      out.write("	    		}\r\n");
      out.write("	    	}\r\n");
      out.write("	    	\r\n");
      out.write("	    	//선택한 지역, 카테고리에 따라 리스트 불러오기\r\n");
      out.write("	    	$(\".chooseCategory\").click(function(){\r\n");
      out.write("	        	var placeChoice = document.getElementById('region');\r\n");
      out.write("	        	var areaNo = placeChoice.options[placeChoice.selectedIndex].value;  //선택한 select의 index 알아내기, for문 돌 필요없음\r\n");
      out.write("	        	var category = $(this).text();\r\n");
      out.write("	        	\r\n");
      out.write("	        	console.log(\"areaNo : \" + areaNo);\r\n");
      out.write("	        	console.log(\"category : \" + category);\r\n");
      out.write("	        	\r\n");
      out.write("				$.ajax({\r\n");
      out.write("\r\n");
      out.write("					url : \"pclist.do\",\r\n");
      out.write("					data : {\r\n");
      out.write("						areaNo : areaNo,\r\n");
      out.write("						category : category\r\n");
      out.write("					},\r\n");
      out.write("					type : \"get\",\r\n");
      out.write("					success: function(pcList){  //success : ajax 통신 성공시 처리할 함수를 지정하는 속성\r\n");
      out.write("					\r\n");
      out.write("						console.log(\"ajax 통신성공\");\r\n");
      out.write("						console.log(pcList);\r\n");
      out.write("						\r\n");
      out.write("						ajaxPlaceList(pcList);\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error : function(){	\r\n");
      out.write("						console.log(\"ajax 통신 실패\")\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("	        })\r\n");
      out.write("	    	\r\n");
      out.write("	    	//선택한 지역에 따라 리스트불러오기\r\n");
      out.write("	        function clickRegion(c){\r\n");
      out.write("	        	var placeChoice = document.getElementById('region');\r\n");
      out.write("	        	var areaNo = placeChoice.options[placeChoice.selectedIndex].value;  //선택한 select의 index 알아내기, for문 돌 필요없음\r\n");
      out.write("	        	console.log(\"areaNo : \" + areaNo);\r\n");
      out.write("	        	\r\n");
      out.write("				$.ajax({\r\n");
      out.write("\r\n");
      out.write("					url : \"plist.do\",\r\n");
      out.write("					data : {\r\n");
      out.write("						areaNo : areaNo\r\n");
      out.write("					},\r\n");
      out.write("					type : \"get\",\r\n");
      out.write("					success: function(pList){  //success : ajax 통신 성공시 처리할 함수를 지정하는 속성\r\n");
      out.write("					\r\n");
      out.write("						console.log(\"ajax 통신성공\");\r\n");
      out.write("						console.log(pList);\r\n");
      out.write("						\r\n");
      out.write("						ajaxPlaceList(pList);\r\n");
      out.write("						\r\n");
      out.write("					},\r\n");
      out.write("					error : function(){	\r\n");
      out.write("						console.log(\"ajax 통신 실패\")\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("	        }\r\n");
      out.write("	        \r\n");
      out.write("	        //지역에 따른 리스트 ajax로 받은 후 -> 동적 태그 생성\r\n");
      out.write("	    	function ajaxPlaceList(pList){\r\n");
      out.write("         		var result = '';\r\n");
      out.write("         		var contextPath = \"");
      out.print(contextPath);
      out.write("\"\r\n");
      out.write("          		$.each(pList, function(i){                         	\r\n");
      out.write("                	result += '<div class=\"col-lg-6 col-md-6\">'  <!-- 가로 한 줄에 장소 2개 나오게끔 설정 -->\r\n");
      out.write("							+ '<div class=\"thumbnail\" align=\"center\">'\r\n");
      out.write("							+ '<input type=\"hidden\" value=\"'+ pList[i].placeNo +'\" id=\"placeNo\">'\r\n");
      out.write("							+ '<input type=\"hidden\" value=\"'+pList[i].areaNo+'\" id=\"areaNo\" name=\"areaNo\">'\r\n");
      out.write("							+ '<img class=\"placeImg\" src=\"'+contextPath+'/resources/place_upFiles/'+pList[i].titleImg +'\" width=\"100%\" height=\"250px\"><br>'\r\n");
      out.write("	                    	+ '<div class=\"planBox\">'\r\n");
      out.write("	                    	+ '<p class=\"placeTitle\" id=\"placeTitle\" style=\"font-size:25px; color:black;\">'+pList[i].placeTitle+'</p>'\r\n");
      out.write("	                    	+ '<p id=\"placeAddress\">'+pList[i].address+'</p>'\r\n");
      out.write("							+ '<p>'+pList[i].description+'</p>'\r\n");
      out.write("	                    	+ '<button class=\"btn btn-primary addPlace\" style=\"margin-right: 3px;\">추가</button>'\r\n");
      out.write("							+ '<button class=\"btn btn-primary placeDetail\" style=\"margin-left: 3px;\">더보기</button>'\r\n");
      out.write("							+'</div></div></div>';\r\n");
      out.write("							\r\n");
      out.write("          		})\r\n");
      out.write("          		$(\"#placeList\").html(result);\r\n");
      out.write("	    	}\r\n");
      out.write("	        //=================================================================================ajax리스트 배치 완성 / 함수적용 완성(0912)\r\n");
      out.write("	        \r\n");
      out.write("	        //placeNo 담는 배열 -> 중복체크위해서 전역변수로 만들어서 씀\r\n");
      out.write("	        placeArr = new Array();\r\n");
      out.write("	        \r\n");
      out.write("        	//일정 테이블에서 삭제하기\r\n");
      out.write("            function rowDelete(obj){\r\n");
      out.write("                $(obj).parent().parent().remove();                             //행 통째로 삭제\r\n");
      out.write("                var placeNo = $(obj).parent().siblings(\"#tablePlaceNo\").val(); //장소번호 추출\r\n");
      out.write("	            placeArr.splice($.inArray(placeNo, placeArr),1);               //placeArr배열에서 장소번호 삭제\r\n");
      out.write("	            \r\n");
      out.write("	            console.log(\"삭제 후 placeArr: \" + placeArr);\r\n");
      out.write("            } \r\n");
      out.write("	        \r\n");
      out.write("	        //[동적함수] ajax로 추가된 태그들에 함수가 적용되게 하기 위해서 모든 함수를 동적으로 바꾼다...\r\n");
      out.write("		    //[동적함수] '더보기'클릭시 placeDetail창으로 새롭게 열린다.\r\n");
      out.write("		    $(document).on('click','.placeDetail',function(){\r\n");
      out.write("		    	console.log(\"동적 함수 작동되는건가?\");\r\n");
      out.write("		    	\r\n");
      out.write("				var parent = $(this).parent();  //클릭한 버튼의 최상위 부모\r\n");
      out.write("				var pNo = parent.siblings(\"#placeNo\").val();	//클릭한 버튼의 최상위 부모의 id가 placeNo value값\r\n");
      out.write("				window.open(\"./detail.pl?pNo=\"+pNo);  //장소상세페이지 새창으로 열기\r\n");
      out.write("			});\r\n");
      out.write("		    \r\n");
      out.write("		  	//[동적함수] '추가'버튼 클릭시 -> 왼쪽화면에 표 추가되도록 하기\r\n");
      out.write("		    $(document).on('click','.addPlace',function() {\r\n");
      out.write("		        var parent = $(this).parent();\r\n");
      out.write("		        var title = parent.children(\"#placeTitle\").text();  		//장소명 추출\r\n");
      out.write("		        var address = parent.children(\"#placeAddress\").text();		//장소주소 추출\r\n");
      out.write("		        var placeNo = $(this).parent().siblings(\"#placeNo\").val(); //장소번호 추출\r\n");
      out.write("		            \r\n");
      out.write("		        placeArr.push(placeNo);                                     //placeArr배열에 장소번호 추가\r\n");
      out.write("		            \r\n");
      out.write("		        console.log(\"추가 후 placeArr: \" + placeArr);\r\n");
      out.write("		            \r\n");
      out.write("		        if(noDuplicate(placeNo)){\r\n");
      out.write("		            var $tr = $(\"<tr>\"); //테이블 행 생성\r\n");
      out.write("			        var hidden = '<input type=\"hidden\" name=\"placeNo\" id=\"tablePlaceNo\" value=\"'+placeNo+'\">'; //hidden으로 placeNo넘기기\r\n");
      out.write("			        var $title = $(\"<td>\").text(title); \r\n");
      out.write("			        var $address = $(\"<td>\").text(address); \r\n");
      out.write("			        var btn = '<td><button onClick=\"rowDelete(this)\">빼기</button></td>';\r\n");
      out.write("			\r\n");
      out.write("			        $tr.append(hidden);   //placeNo\r\n");
      out.write("			        $tr.append($title);   //title\r\n");
      out.write("			        $tr.append($address); //address\r\n");
      out.write("			        $tr.append(btn);      //빼기 버튼\r\n");
      out.write("			\r\n");
      out.write("			        $(\"#my_tbody:last\").append($tr);\r\n");
      out.write("		        }else{\r\n");
      out.write("		            alert(\"장소는 하나씩만 추가해주세요:)\");\r\n");
      out.write("		        }\r\n");
      out.write("		    });\r\n");
      out.write("\r\n");
      out.write("		    //테이블에 추가된 일정 중복여부 체크\r\n");
      out.write("		    function noDuplicate(placeNo){\r\n");
      out.write("				for(var i=0; i<placeArr.length-1; i++){\r\n");
      out.write("					if(placeArr[i] == placeNo){\r\n");
      out.write("						placeArr.pop();		//placeArr에서 값 삭제\r\n");
      out.write("						console.log(\"중복값 체크후 placeArr : \" + placeArr)\r\n");
      out.write("						return false;		//\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				return true;\r\n");
      out.write("		    }\r\n");
      out.write("    	</script>\r\n");
      out.write("    </section>\r\n");
      out.write("    <!-- Listing Section End -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Map Begin -->\r\n");
      out.write("    <div class=\"listing__map\">\r\n");
      out.write("    	<!-- <div id=\"map\" style=\"width:647px;height:793px;\"></div> -->\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	<div class=\"map_wrap\">\r\n");
      out.write("    <div id=\"map\" style=\"width:100%;height:100%;position:relative;overflow:hidden;\"></div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("        <div class=\"option\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <form onsubmit=\"searchPlaces(); return false;\">\r\n");
      out.write("                    키워드 : <input type=\"text\" value=\"강남역 맛집\" id=\"keyword\" size=\"15\"> \r\n");
      out.write("                    <button type=\"submit\">검색하기</button> \r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <ul id=\"placesList\"></ul>\r\n");
      out.write("        <div id=\"pagination\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- services와 clusterer, drawing 라이브러리 불러오기 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=879134364fa796c4ccf9a5a523dc7377&libraries=services\"></script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		//사진 클릭시 placeTitle반환 & 지도에서 serch해주는 함수 호출\r\n");
      out.write("		$(document).on('click','.placeImg',function(){\r\n");
      out.write("			var pTitle = $(this).siblings().children(\"#placeTitle\").text();\r\n");
      out.write("				\r\n");
      out.write("			$(\"#keyword\").val(pTitle); //검색창 띄우기\r\n");
      out.write("			searchPlaces();      //지도에서 serch해주는 함수\r\n");
      out.write("		}); \r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 마커를 담을 배열입니다\r\n");
      out.write("		var markers = [];\r\n");
      out.write("		\r\n");
      out.write("		var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("		    mapOption = {\r\n");
      out.write("		        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("		        level: 3 // 지도의 확대 레벨\r\n");
      out.write("		    };  \r\n");
      out.write("		\r\n");
      out.write("		// 지도를 생성합니다    \r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption); \r\n");
      out.write("		\r\n");
      out.write("		// 장소 검색 객체를 생성합니다\r\n");
      out.write("		var ps = new kakao.maps.services.Places();  \r\n");
      out.write("		\r\n");
      out.write("		// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("		var infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n");
      out.write("		\r\n");
      out.write("		// 키워드로 장소를 검색합니다\r\n");
      out.write("		searchPlaces();\r\n");
      out.write("		\r\n");
      out.write("		// 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("		function searchPlaces() {\r\n");
      out.write("		\r\n");
      out.write("		    var keyword = document.getElementById('keyword').value;\r\n");
      out.write("		\r\n");
      out.write("		    if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("		        alert('키워드를 입력해주세요!');\r\n");
      out.write("		        return false;\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("		    ps.keywordSearch( keyword, placesSearchCB); \r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("		function placesSearchCB(data, status, pagination) {\r\n");
      out.write("		    if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("		\r\n");
      out.write("		        // 정상적으로 검색이 완료됐으면\r\n");
      out.write("		        // 검색 목록과 마커를 표출합니다\r\n");
      out.write("		        displayPlaces(data);\r\n");
      out.write("		\r\n");
      out.write("		        // 페이지 번호를 표출합니다\r\n");
      out.write("		        displayPagination(pagination);\r\n");
      out.write("		\r\n");
      out.write("		    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("		\r\n");
      out.write("		        alert('검색 결과가 존재하지 않습니다.');\r\n");
      out.write("		        return;\r\n");
      out.write("		\r\n");
      out.write("		    } else if (status === kakao.maps.services.Status.ERROR) {\r\n");
      out.write("		\r\n");
      out.write("		        alert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("		        return;\r\n");
      out.write("		\r\n");
      out.write("		    }\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("		function displayPlaces(places) {\r\n");
      out.write("		\r\n");
      out.write("		    var listEl = document.getElementById('placesList'), \r\n");
      out.write("		    menuEl = document.getElementById('menu_wrap'),\r\n");
      out.write("		    fragment = document.createDocumentFragment(), \r\n");
      out.write("		    bounds = new kakao.maps.LatLngBounds(), \r\n");
      out.write("		    listStr = '';\r\n");
      out.write("		    \r\n");
      out.write("		    // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("		    removeAllChildNods(listEl);\r\n");
      out.write("		\r\n");
      out.write("		    // 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("		    removeMarker();\r\n");
      out.write("		    \r\n");
      out.write("		    for ( var i=0; i<places.length; i++ ) {\r\n");
      out.write("		\r\n");
      out.write("		        // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("		        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n");
      out.write("		            marker = addMarker(placePosition, i), \r\n");
      out.write("		            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("		\r\n");
      out.write("		        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("		        // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("		        bounds.extend(placePosition);\r\n");
      out.write("		\r\n");
      out.write("		        // 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("		        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("		        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("		        (function(marker, title) {\r\n");
      out.write("		            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("		                displayInfowindow(marker, title);\r\n");
      out.write("		            });\r\n");
      out.write("		\r\n");
      out.write("		            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("		                infowindow.close();\r\n");
      out.write("		            });\r\n");
      out.write("		\r\n");
      out.write("		            itemEl.onmouseover =  function () {\r\n");
      out.write("		                displayInfowindow(marker, title);\r\n");
      out.write("		            };\r\n");
      out.write("		\r\n");
      out.write("		            itemEl.onmouseout =  function () {\r\n");
      out.write("		                infowindow.close();\r\n");
      out.write("		            };\r\n");
      out.write("		        })(marker, places[i].place_name);\r\n");
      out.write("		\r\n");
      out.write("		        fragment.appendChild(itemEl);\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("		    listEl.appendChild(fragment);\r\n");
      out.write("		    menuEl.scrollTop = 0;\r\n");
      out.write("		\r\n");
      out.write("		    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("		    map.setBounds(bounds);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("		function getListItem(index, places) {\r\n");
      out.write("		\r\n");
      out.write("		    var el = document.createElement('li'),\r\n");
      out.write("		    itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n");
      out.write("		                '<div class=\"info\">' +\r\n");
      out.write("		                '   <h5>' + places.place_name + '</h5>';\r\n");
      out.write("		\r\n");
      out.write("		    if (places.road_address_name) {\r\n");
      out.write("		        itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n");
      out.write("		                    '   <span class=\"jibun gray\">' +  places.address_name  + '</span>';\r\n");
      out.write("		    } else {\r\n");
      out.write("		        itemStr += '    <span>' +  places.address_name  + '</span>'; \r\n");
      out.write("		    }\r\n");
      out.write("		                 \r\n");
      out.write("		      itemStr += '  <span class=\"tel\">' + places.phone  + '</span>' +\r\n");
      out.write("		                '</div>';           \r\n");
      out.write("		\r\n");
      out.write("		    el.innerHTML = itemStr;\r\n");
      out.write("		    el.className = 'item';\r\n");
      out.write("		\r\n");
      out.write("		    return el;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("		function addMarker(position, idx, title) {\r\n");
      out.write("		    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("		        imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n");
      out.write("		        imgOptions =  {\r\n");
      out.write("		            spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("		            spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("		            offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("		        },\r\n");
      out.write("		        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n");
      out.write("		            marker = new kakao.maps.Marker({\r\n");
      out.write("		            position: position, // 마커의 위치\r\n");
      out.write("		            image: markerImage \r\n");
      out.write("		        });\r\n");
      out.write("		\r\n");
      out.write("		    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("		    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("		\r\n");
      out.write("		    return marker;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("		function removeMarker() {\r\n");
      out.write("		    for ( var i = 0; i < markers.length; i++ ) {\r\n");
      out.write("		        markers[i].setMap(null);\r\n");
      out.write("		    }   \r\n");
      out.write("		    markers = [];\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("		function displayPagination(pagination) {\r\n");
      out.write("		    var paginationEl = document.getElementById('pagination'),\r\n");
      out.write("		        fragment = document.createDocumentFragment(),\r\n");
      out.write("		        i; \r\n");
      out.write("		\r\n");
      out.write("		    // 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("		    while (paginationEl.hasChildNodes()) {\r\n");
      out.write("		        paginationEl.removeChild (paginationEl.lastChild);\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    for (i=1; i<=pagination.last; i++) {\r\n");
      out.write("		        var el = document.createElement('a');\r\n");
      out.write("		        el.href = \"#\";\r\n");
      out.write("		        el.innerHTML = i;\r\n");
      out.write("		\r\n");
      out.write("		        if (i===pagination.current) {\r\n");
      out.write("		            el.className = 'on';\r\n");
      out.write("		        } else {\r\n");
      out.write("		            el.onclick = (function(i) {\r\n");
      out.write("		                return function() {\r\n");
      out.write("		                    pagination.gotoPage(i);\r\n");
      out.write("		                }\r\n");
      out.write("		            })(i);\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		        fragment.appendChild(el);\r\n");
      out.write("		    }\r\n");
      out.write("		    paginationEl.appendChild(fragment);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("		// 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("		function displayInfowindow(marker, title) {\r\n");
      out.write("		    var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n");
      out.write("		\r\n");
      out.write("		    infowindow.setContent(content);\r\n");
      out.write("		    infowindow.open(map, marker);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		 // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("		function removeAllChildNods(el) {   \r\n");
      out.write("		    while (el.hasChildNodes()) {\r\n");
      out.write("		        el.removeChild (el.lastChild);\r\n");
      out.write("		    }\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Map End -->\r\n");
      out.write("\r\n");
      out.write("    <script> \r\n");
      out.write("        // 달력 날짜 선택 \r\n");
      out.write("        $(function () {\r\n");
      out.write("            $('#startDate').datepicker({minDate: 0});\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        function goPlan(){\r\n");
      out.write("            ");
if(loginUser == null) {
      out.write("\r\n");
      out.write("               alert(\"로그인 후 이용해주세요\");\r\n");
      out.write("               location.href=\"");
      out.print(request.getContextPath());
      out.write("\";\r\n");
      out.write("            ");
}else{ 
      out.write("\r\n");
      out.write("               location.href=\"");
      out.print(request.getContextPath());
      out.write("/list.pm\";\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("         } \r\n");
      out.write("        \r\n");
      out.write("      	//날짜 확인 버튼 -> h5태그 값 변경\r\n");
      out.write("        $('#dateBtn').click(function(){\r\n");
      out.write("            var value = $(\"#startDate\").val();\r\n");
      out.write("            console.log(value);\r\n");
      out.write("            $(\"#planDate\").text('선택하신 날짜 : ' + value);\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Js Plugins -->\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery.nice-select.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery-ui.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery.nicescroll.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery.barfiller.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery.magnific-popup.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/jquery.slicknav.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/owl.carousel.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/main.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
