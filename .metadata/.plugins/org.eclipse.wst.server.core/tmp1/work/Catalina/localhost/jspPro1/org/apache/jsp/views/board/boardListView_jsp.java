/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-09-15 06:43:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.kh.board.model.vo.*;
import com.kh.member.model.vo.Member;

public final class boardListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/board/../common/menubar.jsp", Long.valueOf(1630312752988L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.kh.board.model.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

	ArrayList<Board> list  = (ArrayList<Board>)request.getAttribute("list");
	PageInfo pi = (PageInfo)request.getAttribute("pi");
	
	int listCount = pi.getListCount();
	int currentPage = pi.getCurrentPage();
	int maxPage = pi.getMaxPage();
	int startPage = pi.getStartPage();
	int endPage = pi.getEndPage();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	.outer{\r\n");
      out.write("		width:1000px;\r\n");
      out.write("		height:500px;\r\n");
      out.write("		background:black;\r\n");
      out.write("		color:white;\r\n");
      out.write("		margin:auto;\r\n");
      out.write("		margin-top:50px;\r\n");
      out.write("	}\r\n");
      out.write("	.listArea{\r\n");
      out.write("		border:1px solid white;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("	.listArea>tbody>tr:hover{\r\n");
      out.write("		background:darkgrey;\r\n");
      out.write("		cursor:pointer\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");

	Member loginUser = (Member)session.getAttribute("loginUser");

	String msg = (String)session.getAttribute("msg");
	
	String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	body{\r\n");
      out.write("		background:url('");
      out.print(request.getContextPath() );
      out.write("/resources/images/i.jpg') no-repeat; \r\n");
      out.write("		background-size:cover;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 로그인 폼 관련 스타일*/\r\n");
      out.write("	#loginForm, #userInfo{float:right;}\r\n");
      out.write("	.btns button{border-radius:5px;}\r\n");
      out.write("	#enrollBtn, #mypageBtn{background-color:yellowgreen;}\r\n");
      out.write("	#loginBtn, #logoutBtn{background-color:orangered;}\r\n");
      out.write("	#userInfo a{text-decoration:none;color:white;}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	/* 메뉴영역 관련 스타일*/\r\n");
      out.write("	.navWrap{background-color:black; width:100%; height:50px}\r\n");
      out.write("	.navWrap>.nav{width:600px;margin:auto;}\r\n");
      out.write("	.menu{text-align:center;color:white;font-weight:bold;width:150px;height:50px;display:table-cell;font-size:20px;vertical-align:middle;}\r\n");
      out.write("	.menu:hover{background-color:darkgray;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() \r\n");
      out.write("	{\r\n");
      out.write("		var msg = \"");
      out.print( msg);
      out.write("\";\r\n");
      out.write("		if(msg != \"null\"){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			");
 session.removeAttribute("msg");
      out.write("\r\n");
      out.write("		}		\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	function loginValidate()\r\n");
      out.write("	{\r\n");
      out.write("		if($(\"#userId\").val().trim().length ==0)\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"아이디를 입력하세요\");\r\n");
      out.write("			$(\"#userId\").focus();\r\n");
      out.write("			return false;		\r\n");
      out.write("		}\r\n");
      out.write("		if($(\"#userPwd\").val().trim().length ==0)\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"비밀번호를 입력하세요\");\r\n");
      out.write("			$(\"#userPwd\").focus();\r\n");
      out.write("			return false;		\r\n");
      out.write("		}\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h1 align = \"center\" style=\"color:white;\">Welcome JSP World!</h1>\r\n");
      out.write("	<div class= \"loginArea\">	\r\n");
      out.write("		");
if(loginUser == null){
      out.write("					\r\n");
      out.write("			\r\n");
      out.write("		<form id = \"loginForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/login.me\" method=\"post\" onsubmit=\"return loginValidate();\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th><label for = \"userId\" style=\"color:white;\">아이디</label></th>\r\n");
      out.write("					<td><input id=\"userId\" type=\"text\" name=\"userId\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th><label for = \"userPwd\" style=\"color:white;\">비밀번호</label></th>\r\n");
      out.write("					<td><input id=\"userPwd\" type=\"text\" name=\"userPwd\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<div class =\"btns\" align=\"center\">\r\n");
      out.write("				\r\n");
      out.write("				<button id = \"loginBtn\" type=\"submit\">로그인</button>\r\n");
      out.write("			    <button id = \"enrollBtn\" type=\"button\" onclick=\"enrollPage();\">회원가입</button>\r\n");
      out.write("			</div>		\r\n");
      out.write("		</form>\r\n");
      out.write("		");
} else { 
      out.write("\r\n");
      out.write("			<div id = \"userInfo\">\r\n");
      out.write("				<b style = \"color:white;\">");
      out.print(loginUser.getUserName() );
      out.write(" 님 </b> 의 방문을 환영합니다.\r\n");
      out.write("				<br><br>\r\n");
      out.write("				<div class =\"btns\" align=\"center\">\r\n");
      out.write("					<a href = \"");
      out.print(request.getContextPath() );
      out.write("/mypage.me\">마이페이지</a>\r\n");
      out.write("					<a href = \"");
      out.print(request.getContextPath() );
      out.write("/logout.me\">로그아웃</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			</div>\r\n");
      out.write("		");
}
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script type = \"text/javascript\">\r\n");
      out.write("	function enrollPage(){\r\n");
      out.write("		location.href = \"");
      out.print(request.getContextPath());
      out.write("/enrollForm.me\";\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("		<br clear=\"both\">\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"navWrap\">\r\n");
      out.write("			<div class=\"nav\">\r\n");
      out.write("				<div class=\"menu\" onclick=\"goMain();\">HOME</div>\r\n");
      out.write("				<div class=\"menu\" onclick=\"goNotice();\">공지사항</div>\r\n");
      out.write("				<div class=\"menu\" onclick=\"goBoard();\">게시판</div>\r\n");
      out.write("				<div class=\"menu\" onclick=\"goThumbnail();\">사진게시판</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<script>\r\n");
      out.write("			function goMain(){\r\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("\";\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			function goNotice(){\r\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("/list.no\";\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function goBoard(){\r\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("/list.bo\";\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function goThumbnail(){\r\n");
      out.write("				location.href=\"");
      out.print(request.getContextPath());
      out.write("/list.th\";\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"outer\">\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<h2 align=\"center\">게시판</h2>\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<table class=\"listArea\" align=\"center\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th width=\"100\">글번호</th>\r\n");
      out.write("					<th width=\"100\">카테고리</th>\r\n");
      out.write("					<th width=\"300\">글제목</th>\r\n");
      out.write("					<th width=\"100\">작성자</th>\r\n");
      out.write("					<th width=\"100\">조회수</th>\r\n");
      out.write("					<th width=\"150\">작성일</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			<thead>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				");
if(list.isEmpty()){ 
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"6\">조회된 리스트가 없습니다.</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");
}else{ 
      out.write("\r\n");
      out.write("					");
 for(Board b : list){ 
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print( b.getBoardNo() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( b.getCategory() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( b.getBoardTitle() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( b.getBoardWriter() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( b.getCount() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( b.getCreateDate() );
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<br><br>\r\n");
      out.write("		\r\n");
      out.write("		<!-- 페이징바 만들기 -->\r\n");
      out.write("		<div class=\"pagingArea\" align=\"center\">\r\n");
      out.write("			<!-- 맨 처음으로 (<<) -->\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print(contextPath);
      out.write("/list.bo?currentPage=1'\"> &lt;&lt; </button>\r\n");
      out.write("		\r\n");
      out.write("			<!-- 이전페이지로(<) -->\r\n");
      out.write("			");
if(currentPage == 1){ 
      out.write("\r\n");
      out.write("			<button disabled> &lt; </button>\r\n");
      out.write("			");
}else{ 
      out.write("\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print( contextPath );
      out.write("/list.bo?currentPage=");
      out.print( currentPage-1 );
      out.write("'\"> &lt; </button>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<!-- 페이지 목록 -->\r\n");
      out.write("			");
for(int p=startPage; p<=endPage; p++){ 
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				");
if(p == currentPage){ 
      out.write("\r\n");
      out.write("				<button disabled> ");
      out.print( p );
      out.write(" </button>\r\n");
      out.write("				");
}else{ 
      out.write("\r\n");
      out.write("				<button onclick=\"location.href='");
      out.print(contextPath );
      out.write("/list.bo?currentPage=");
      out.print( p );
      out.write("'\"> ");
      out.print( p );
      out.write(" </button>\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("				\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<!-- 다음페이지로(>) -->\r\n");
      out.write("			");
if(currentPage == maxPage){ 
      out.write("\r\n");
      out.write("			<button disabled> &gt; </button>\r\n");
      out.write("			");
}else { 
      out.write("\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print( contextPath );
      out.write("/list.bo?currentPage=");
      out.print( currentPage+1 );
      out.write("'\"> &gt; </button>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<!-- 맨 끝으로 (>>) -->\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print(contextPath);
      out.write("/list.bo?currentPage=");
      out.print(maxPage);
      out.write("'\"> &gt;&gt; </button>\r\n");
      out.write("		</div> \r\n");
      out.write("		<br><br>\r\n");
      out.write("		<div align=\"center\">\r\n");
      out.write("		");
 if(loginUser != null){ 
      out.write("\r\n");
      out.write("		<button onclick=\"location.href='enrollForm.bo'\">작성하기</button>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		");
if(!list.isEmpty()){
      out.write("\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\".listArea>tbody>tr\").click(function(){\r\n");
      out.write("				var bno = $(this).children().eq(0).text();\r\n");
      out.write("				location.href=\"");
      out.print( contextPath);
      out.write("/detail.bo?bno=\"+bno;\r\n");
      out.write("			})\r\n");
      out.write("		})\r\n");
      out.write("		");
}
      out.write("\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
